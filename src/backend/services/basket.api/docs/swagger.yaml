basePath: '{{.BasePath}}'
definitions:
  models.BasketItem:
    properties:
      foodId:
        type: string
      foodName:
        type: string
      id:
        type: string
      oldUnitPrice:
        type: number
      picture:
        type: string
      quantity:
        type: integer
      unitPrice:
        type: number
    type: object
  models.CustomerBasket:
    properties:
      customerId:
        type: string
      items:
        items:
          $ref: '#/definitions/models.BasketItem'
        type: array
    type: object
  models.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
host: '{{.Host}}'
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a rest api for basket which saves items to redis server
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Basket API
  version: "1.0"
paths:
  /items:
    post:
      consumes:
      - application/json
      description: add by json new CustomerBasket
      parameters:
      - description: Add CustomerBasket
        in: body
        name: CustomerBasket
        required: true
        schema:
          $ref: '#/definitions/models.CustomerBasket'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerBasket'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
            type: object
      security:
      - OAuth: []
      summary: Add a CustomerBasket
      tags:
      - CustomerBasket
  /items/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes CustomerBasket by ID
      parameters:
      - description: CustomerBasket ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
            type: object
      security:
      - OAuth: []
      summary: Deletes a CustomerBasket
      tags:
      - CustomerBasket
    get:
      consumes:
      - application/json
      description: Get CustomerBasket by ID
      parameters:
      - description: CustomerBasket ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerBasket'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPError'
            type: object
      security:
      - OAuth: []
      summary: Gets a CustomerBasket
      tags:
      - CustomerBasket
securityDefinitions:
  OAuth:
    authorizationUrl: '{{.AuthUrl}}'
    flow: implicit
    scopes:
      basket-api: ' Access to basket-api'
    type: oauth2
swagger: "2.0"
