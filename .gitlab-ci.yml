
services:
- docker:dind

stages:
- build
- test
- deploy

variables:
  IMAGE_BASE_NAME: registry.gitlab.com/jurabek/restaurant-app
  DOCKER_DRIVER: overlay2

# .before_script_docker_login: &login_to_docker
#   before_script:
#   - docker login registry.gitlab.com -u "$DOCKER_USER_NAME" -p $DOCKER_PASSWORD
    

before_script:
  - apk add --update curl 
  - apk add --update git
  - apk add curl jq python py-pip
  - pip --cache-dir=pip_cache install awscli
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - export NUGET_PACKAGES=$(pwd)/.nuget
  - export GOPATH=$(pwd)/go

  - cd src/Server/
  - chmod -R +x ci/

# cache:
#   key: "$CI_PROJECT_NAME"
#   paths:
   
#     - .nuget/
#     - pip_cache/
   

build:gateway_api:
  stage: build
  image: openjdk:8-jdk-alpine
  script:
    - ci/build.sh gateway_api
  cache:
    key: gradle-cache
    paths:
     - .gradle/wrapper
     - .gradle/caches

build:service_discovery:
  stage: build
  image: openjdk:8-jdk-alpine
  script:
    - ci/build.sh service_discovery
  cache:
    key: gradle-cache
    paths:
     - .gradle/wrapper
     - .gradle/caches

build:basket_api:
  image: golang:1.11-alpine
  stage: build
  script:
    - ci/update_build_badge.sh running basket_api
    - echo "failure" > basket_status.txt #https://gitlab.com/gitlab-org/gitlab-runner/issues/3088
    - ci/build.sh basket_api
    - echo "success" > basket_status.txt
    - export BASKET_STATUS=success
  after_script:
    - echo "Printing basket status from export"
    - echo $BASKET_STATUS
    - cd src/Server/
    - ci/update_build_badge.sh `cat basket_status.txt` basket_api
  cache:
    key: go-cache
    paths:
      - go
  
build:order_api:
  image: openjdk:8-jdk-alpine
  stage: build
  script:
    - ci/update_build_badge.sh running order_api
    - echo "failure" > order_status.txt
    - ci/build.sh order_api
    - echo "success" > order_status.txt
  after_script:
    - cd src/Server/
    - ci/update_build_badge.sh `cat order_status.txt` order_api
  cache:
    key: gradle-cache
    paths:
     - .gradle/wrapper
     - .gradle/caches

# build:identity_api:
#   stage: build
#   script:
#     - ci/update_build_badge.sh running identity_api
#     - echo "failure" > identity_status.txt
#     - ci/build.sh identity_api
#     - echo "success" > identity_status.txt
#   after_script:
#     - cd src/Server/
#     - ci/update_build_badge.sh `cat identity_status.txt` identity_api

build:menu_api:
  stage: build
  script:
    - ci/update_build_badge.sh running menu_api
    - echo "failure" > menu_status.txt
    - ci/build.sh menu_api
    - echo "success" > menu_status.txt
  after_script:
    - cd src/Server/
    - ci/update_build_badge.sh `cat menu_status.txt` menu_api
  cache:
    key: dotnet-cache
    paths:
      - .nuget/

test:basket_api:
  image: golang:1.11-alpine
  stage: test
  script: 
    - ci/test.sh basket_api
  dependencies:
    - build:basket_api
  cache:
    key: go-cache
    paths:
      - go

# test:identity_api:
#   stage: test
#   script: 
#     - ci/test.sh identity_api
#   dependencies:
#     - build:identity_api

test:menu_api:
  stage: test
  script:
    - ci/test.sh menu_api
  dependencies:
    - build:menu_api
  cache:
    key: dotnet-cache
    paths:
      - .nuget/

test:order_api:
  image: openjdk:8-jdk-alpine
  stage: test
  script:
    - ci/test.sh order_api
  dependencies:
    - build:order_api
  cache:
    key: gradle-cache
    paths:
     - .gradle/wrapper
     - .gradle/caches

