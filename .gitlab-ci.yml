
services:
- docker:dind

stages:
- build & test
- deploy
- finalize build

variables:
  IMAGE_BASE_NAME: registry.gitlab.com/jurabek/restaurant-app
  DOCKER_DRIVER: overlay2

# .before_script_docker_login: &login_to_docker
#   before_script:
#   - docker login registry.gitlab.com -u "$DOCKER_USER_NAME" -p $DOCKER_PASSWORD
    

before_script:
  - apk add --no-cache curl
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - export NUGET_PACKAGES=$(pwd)/.nuget
  - export GOPATH=$(pwd)/go
  - pwd
  - cd src/Server/
  - chmod -R +x ci/
    
build:basket_api:
  before_script:
    - sh src/Server/services/basket.api/install_ci_dependencies.sh
  image: golang:1.11-alpine
  stage: build & test
  script:
    - ci/update_build_badge.sh running basket_api
    - echo "failure" > basket_status.txt #https://gitlab.com/gitlab-org/gitlab-runner/issues/3088
    - ci/build.sh basket_api
    - echo "success" > basket_status.txt
  after_script:
    - cd src/Server/
    - ci/update_build_badge.sh `cat basket_status.txt` basket_api
  cache:
    key: go-cache
    paths:
      - go
  only:
    changes:
      - src/Server/services/basket.api/**/*
  artifacts:
    untracked: true
    when: always
    paths:
      - src/Server/public/badges/
  
build:order_api:
  image: openjdk:8-jdk-alpine
  stage: build & test
  script:
    - ci/update_build_badge.sh running order_api
    - echo "failure" > order_status.txt
    - ci/build.sh order_api
    - ci/qa.sh order_api
    - echo "success" > order_status.txt
  after_script:
    - cd src/Server/
    - ci/update_build_badge.sh `cat order_status.txt` order_api
  cache:
    key: gradle-cache
    paths:
     - .gradle/wrapper
     - .gradle/caches
  only:
    changes:
      - src/Server/services/order.api/**/*
  artifacts:
    untracked: true
    when: always
    paths:
      - src/Server/public/badges/

build:identity_api:
  image: microsoft/dotnet:2.2-sdk-alpine
  stage: build & test
  script:
    - ci/update_build_badge.sh running identity_api
    - echo "failure" > identity_status.txt
    - ci/qa.sh identity_api
    - ci/build.sh identity_api
    - echo "success" > identity_status.txt
  after_script:
    - cd src/Server/
    - ci/update_build_badge.sh `cat identity_status.txt` identity_api
  cache:
    key: dotnet-cache
    policy: pull
    paths:
      - .nuget/
  only:
    changes:
      - src/Server/services/identity.api/**/*
  artifacts:
    untracked: true
    when: always
    paths:
      - src/Server/public/badges/

build:menu_api:
  image: microsoft/dotnet:2.2-sdk-alpine
  stage: build & test
  script:
    - ci/update_build_badge.sh running menu_api
    - echo "failure" > menu_status.txt
    - ci/qa.sh menu_api
    - ci/build.sh menu_api
    - echo "success" > menu_status.txt
  after_script:
    - cd src/Server/
    - ci/update_build_badge.sh `cat menu_status.txt` menu_api
  cache:
    key: dotnet-cache
    policy: pull
    paths:
      - .nuget/
  only:
    changes:
      - src/Server/services/menu.api/**/*
  artifacts:
    untracked: true
    when:
      always
    paths:
      - src/Server/public/badges/

pages:
  before_script: []
  stage: finalize build
  script:
    - echo "Deploying badges"
  artifacts:
    paths:
      - public/
  only:
    - develop
